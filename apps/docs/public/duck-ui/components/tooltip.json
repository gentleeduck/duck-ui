{
  "name": "tooltip",
  "type": "registry:ui",
  "dependencies": [
    ""
  ],
  "registryDependencies": [
    "slot"
  ],
  "root_folder": "tooltip",
  "files": [
    {
      "path": "tooltip/index.ts",
      "content": "export * from './tooltip'\n",
      "type": "registry:ui",
      "target": "components/ui/index.ts"
    },
    {
      "path": "tooltip/tooltip.tsx",
      "content": "'use client'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport type React from 'react'\nimport { Popover, PopoverContent, PopoverTrigger } from '../popover'\n\nfunction Tooltip({\n  skipDelayDuration = 150,\n  delayDuration = 0,\n  ...props\n}: Omit<React.ComponentPropsWithRef<typeof Popover>, 'mouseEnter' | 'mouseExist'>) {\n  return (\n    <Popover skipDelayDuration={skipDelayDuration} delayDuration={delayDuration} mouseEnter mouseExist {...props} />\n  )\n}\n\nfunction TooltipTrigger({ children, ...props }: React.ComponentPropsWithRef<typeof PopoverTrigger>) {\n  return (\n    <PopoverTrigger variant={'nothing'} {...props}>\n      {children}\n    </PopoverTrigger>\n  )\n}\n\nfunction TooltipContent({\n  className,\n  children,\n  placement = 'top',\n  ...props\n}: React.ComponentPropsWithRef<typeof PopoverContent>): React.JSX.Element {\n  return (\n    <PopoverContent\n      placement={placement}\n      role=\"tooltip\"\n      className={cn('select-none text-balance rounded-md px-3 py-1.5', className)}\n      {...props}>\n      {children}\n    </PopoverContent>\n  )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent }\n",
      "type": "registry:ui",
      "target": "components/ui/tooltip.tsx"
    }
  ],
  "source": "/registry-ui-duckui/src/tooltip"
}