{
  "name": "tooltip",
  "type": "registry:ui",
  "dependencies": [
    ""
  ],
  "registryDependencies": [
    "slot"
  ],
  "root_folder": "tooltip",
  "files": [
    {
      "path": "tooltip/index.ts",
      "content": "export * from './tooltip'\n",
      "type": "registry:ui",
      "target": "components/ui/index.ts"
    },
    {
      "path": "tooltip/tooltip.tsx",
      "content": "'use client'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport { AnimTooltipVariants } from '@gentleduck/motion/anim'\nimport React from 'react'\nimport { Popover, PopoverContent, PopoverTrigger } from '../popover'\nimport PopoverPrimitive, { usePopoverContext } from '@gentleduck/aria-feather/popover'\n\nfunction Tooltip({\n  skipDelayDuration = 300,\n  delayDuration = 300,\n  ...props\n}: Omit<React.ComponentPropsWithRef<typeof Popover>, 'mouseEnter' | 'mouseExist'>) {\n  return (\n    <Popover\n      skipDelayDuration={skipDelayDuration}\n      delayDuration={delayDuration}\n      mouseEnter={true}\n      mouseExist={true}\n      {...props}\n    />\n  )\n}\n\nfunction TooltipTrigger({ className, children, ...props }: React.ComponentPropsWithRef<typeof PopoverTrigger>) {\n  return (\n    <PopoverTrigger variant={'nothing'} className={cn('h-auto rounded-none p-0', className)} {...props}>\n      {children}\n    </PopoverTrigger>\n  )\n}\n\nfunction TooltipContent({\n  className,\n  children,\n  side = 'top',\n  ...props\n}: React.ComponentPropsWithRef<typeof PopoverContent>): React.JSX.Element {\n  return (\n    <PopoverContent side={side as never} role=\"tooltip\" className={cn(AnimTooltipVariants(), className)} {...props}>\n      {children}\n    </PopoverContent>\n  )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent }\n",
      "type": "registry:ui",
      "target": "components/ui/tooltip.tsx"
    }
  ],
  "source": "/registry-ui-duckui/src/tooltip"
}