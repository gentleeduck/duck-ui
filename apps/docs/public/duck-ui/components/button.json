{
  "name": "button",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [
    "slot"
  ],
  "root_folder": "button",
  "files": [
    {
      "path": "button/button.constants.ts",
      "content": "import { cva } from '@gentleduck/variants'\n\nexport const buttonVariants = cva(\n  'relative inline-flex cursor-pointer items-center justify-center gap-2 whitespace-nowrap font-regular ring-offset-background transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground shadow-sm hover:bg-primary/90',\n        destructive: 'bg-destructive/90 text-destructive-foreground shadow-xs hover:bg-destructive/70',\n        warning: 'bg-warning/90 text-warning-foreground shadow-xs hover:bg-warning/70',\n        outline:\n          'border border-input bg-background text-accent-foreground shadow-xs hover:bg-accent hover:text-accent-foreground',\n        dashed:\n          'border border-input border-dashed bg-background text-accent-foreground shadow-xs hover:bg-accent/50 hover:text-accent-foreground',\n        secondary: 'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n        ghost: 'text-accent-foreground hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        expand_icon: 'group relative bg-primary text-primary-foreground hover:bg-primary/90',\n        ring_hover:\n          'bg-primary text-primary-foreground transition-all duration-300 hover:bg-primary/90 hover:ring-2 hover:ring-primary/90 hover:ring-offset-2',\n        shine:\n          'animate-shine bg-[length:400%_100%] bg-gradient-to-r from-primary via-primary/75 to-primary text-primary-foreground ',\n        gooey_right:\n          'before:-z-10 relative z-0 overflow-hidden bg-primary from-zinc-400 text-primary-foreground transition-all duration-500 before:absolute before:inset-0 before:translate-x-[150%] before:translate-y-[150%] before:scale-[2.5] before:rounded-[100%] before:bg-gradient-to-r before:transition-transform before:duration-1000 hover:before:translate-x-[0%] hover:before:translate-y-[0%] ',\n        gooey_left:\n          'after:-z-10 relative z-0 overflow-hidden bg-primary from-zinc-400 text-primary-foreground transition-all duration-500 after:absolute after:inset-0 after:translate-x-[-150%] after:translate-y-[150%] after:scale-[2.5] after:rounded-[100%] after:bg-gradient-to-l after:transition-transform after:duration-1000 hover:after:translate-x-[0%] hover:after:translate-y-[0%] ',\n        link_hover1:\n          'relative after:absolute after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-left after:scale-x-100 after:bg-primary after:transition-transform after:duration-300 after:ease-in-out hover:after:origin-bottom-right hover:after:scale-x-0',\n        link_hover2:\n          'relative after:absolute after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-right after:scale-x-0 after:bg-primary after:transition-transform after:duration-300 after:ease-in-out hover:after:origin-bottom-left hover:after:scale-x-100',\n        nothing: '',\n      },\n      size: {\n        icon: 'size-9 rounded-md p-0 text-base [&_svg]:size-[1.1em]',\n        xs: 'h-6 rounded-sm px-2 py-1 text-xs [&_svg]:size-[1.3em]',\n        sm: 'h-8 rounded-md px-3 py-1.5 text-sm [&_svg]:size-[1.3em]',\n        default: 'h-9 rounded-md px-4 py-2 text-base [&_svg]:size-[1.3em]',\n        lg: 'h-10 rounded-md px-6 py-2.5 text-lg [&_svg]:size-[1.3em]',\n        xl: 'h-12 rounded-lg px-8 py-3 text-xl [&_svg]:size-[1.3em]',\n        '2xl': 'h-14 rounded-lg px-10 py-3.5 text-2xl [&_svg]:size-[1.3em]',\n        '3xl': 'h-16 rounded-lg px-12 py-4 text-3xl [&_svg]:size-[1.3em]',\n      },\n      border: {\n        default: '',\n        primary: 'border border-border/40 hover:border-border/80',\n        secondary: 'border border-secondary/40 bg-secondary/40 hover:border-secondary hover:bg-secondary/65',\n        destructive: 'border border-destructive/40 bg-destructive/40 hover:border-destructive hover:bg-destructive/65',\n        warning: 'border border-warning/40 bg-warning/40 hover:border-warning hover:bg-warning/65',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n      border: 'default',\n    },\n  },\n)\n",
      "type": "registry:ui",
      "target": "components/ui/button.constants.ts"
    },
    {
      "path": "button/button.tsx",
      "content": "import * as React from 'react'\n\nimport { buttonVariants } from './button.constants'\nimport { AnimationIconProps, ButtonProps } from './button.types'\nimport { Slot } from '@gentleduck/aria-feather/slot'\n\nimport { cn } from '@gentleduck/libs/cn'\nimport { Loader } from 'lucide-react'\n\n// TODO: make button customizable to the max (icon, width, sizes, etc...)\n\n/**\n * Renders a customizable button component, supporting various styles and behaviors.\n *\n * @param {ButtonProps} props - The props for the button component.\n * @returns {React.JSX.Element} A button element with the specified configurations.\n */\nfunction Button({\n  children,\n  variant = 'default',\n  size = 'default',\n  border = 'default',\n  asChild,\n  className,\n  loading,\n  isCollapsed,\n  icon,\n  secondIcon,\n  type = 'button',\n  disabled,\n  ref,\n  ...props\n}: ButtonProps & { ref?: React.Ref<HTMLButtonElement> }): React.JSX.Element {\n  const Component = (asChild ? Slot : 'button') as React.ElementType\n\n  const Button = (\n    <Component\n      {...props}\n      ref={ref}\n      className={cn(\n        buttonVariants({\n          variant,\n          size: isCollapsed ? 'icon' : size,\n          border,\n          className,\n        }),\n      )}\n      type={type}\n      asChild={asChild}\n      disabled={loading ?? disabled}>\n      {loading ? <Loader className=\"animate-spin\" /> : icon}\n      {!isCollapsed && children}\n      {!isCollapsed && secondIcon && secondIcon}\n    </Component>\n  )\n\n  return Button\n}\n\n/**\n * Renders an animation icon component.\n *\n * @param {AnimationIconProps} props - The props for the animation icon component.\n * @returns {React.JSX.Element} An animation icon component with the specified configurations.\n */\nfunction AnimationIcon({ children, animationIcon }: AnimationIconProps): React.JSX.Element {\n  return (\n    <>\n      {animationIcon?.icon && animationIcon.iconPlacement === 'left' && (\n        <div className=\"group-hover:-translate-x-1 w-0 translate-x-[-1.3em] pr-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:pr-2 group-hover:opacity-100\">\n          {animationIcon?.icon}\n        </div>\n      )}\n      {children}\n      {animationIcon?.icon && animationIcon.iconPlacement === 'right' && (\n        <div className=\"w-0 translate-x-[1.3em] pl-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:translate-x-0 group-hover:pl-2 group-hover:opacity-100\">\n          {animationIcon?.icon}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport { Button, AnimationIcon }\n",
      "type": "registry:ui",
      "target": "components/ui/button.tsx"
    },
    {
      "path": "button/button.types.ts",
      "content": "import { VariantProps } from '@gentleduck/variants'\nimport { buttonVariants } from './button.constants'\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n  isCollapsed?: boolean\n  loading?: boolean\n  icon?: React.ReactNode\n  secondIcon?: React.ReactNode\n}\n\nexport type AnimationIconProps = {\n  children: React.ReactNode\n  /** If you want to animate an icon, please modify the variant to any variant that animate the icon */\n  animationIcon?: {\n    icon?: React.ReactNode\n    iconPlacement?: 'left' | 'right'\n  }\n}\n",
      "type": "registry:ui",
      "target": "components/ui/button.types.ts"
    },
    {
      "path": "button/index.ts",
      "content": "export * from './button'\nexport * from './button.types'\nexport * from './button.constants'\n",
      "type": "registry:ui",
      "target": "components/ui/index.ts"
    }
  ],
  "source": "/registry-ui-duckui/src/button"
}