{
  "name": "breadcrumb",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "root_folder": "breadcrumb",
  "files": [
    {
      "path": "breadcrumb/_breadcrumb.tsx",
      "content": "import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { ChevronRight, MoreHorizontal } from 'lucide-react'\n\nimport { cn } from '@gentleduck/libs/cn'\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<'nav'> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = 'Breadcrumb'\n\nconst BreadcrumbList = React.forwardRef<HTMLOListElement, React.ComponentPropsWithoutRef<'ol'>>(\n  ({ className, ...props }, ref) => (\n    <ol\n      ref={ref}\n      className={cn(\n        'flex flex-wrap items-center gap-1.5 break-words text-muted-foreground text-sm sm:gap-2.5',\n        className,\n      )}\n      {...props}\n    />\n  ),\n)\nBreadcrumbList.displayName = 'BreadcrumbList'\n\nconst BreadcrumbItem = React.forwardRef<HTMLLIElement, React.ComponentPropsWithoutRef<'li'>>(\n  ({ className, ...props }, ref) => (\n    <li ref={ref} className={cn('inline-flex items-center gap-1.5', className)} {...props} />\n  ),\n)\nBreadcrumbItem.displayName = 'BreadcrumbItem'\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<'a'> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : 'a'\n\n  return <Comp ref={ref} className={cn('transition-colors hover:text-foreground', className)} {...props} />\n})\nBreadcrumbLink.displayName = 'BreadcrumbLink'\n\nconst BreadcrumbPage = React.forwardRef<HTMLSpanElement, React.ComponentPropsWithoutRef<'span'>>(\n  ({ className, ...props }, ref) => (\n    <span\n      ref={ref}\n      role=\"link\"\n      aria-disabled=\"true\"\n      aria-current=\"page\"\n      className={cn('font-normal text-foreground', className)}\n      {...props}\n    />\n  ),\n)\nBreadcrumbPage.displayName = 'BreadcrumbPage'\n\nconst BreadcrumbSeparator = ({ children, className, ...props }: React.ComponentProps<'li'>) => (\n  <li role=\"presentation\" aria-hidden=\"true\" className={cn('[&>svg]:size-3.5', className)} {...props}>\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = 'BreadcrumbSeparator'\n\nconst BreadcrumbEllipsis = ({ className, ...props }: React.ComponentProps<'span'>) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn('flex h-9 w-9 items-center justify-center', className)}\n    {...props}>\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = 'BreadcrumbElipssis'\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n",
      "type": "registry:ui",
      "target": "components/ui/_breadcrumb.tsx"
    },
    {
      "path": "breadcrumb/breadcrumb.tsx",
      "content": "import type * as React from 'react'\nimport { ChevronRight, MoreHorizontal } from 'lucide-react'\nimport { cn } from '@gentleduck/libs/cn'\nimport { Slot } from '@gentleduck/duck-primitives/slot'\n\nconst Breadcrumb = ({\n  ref,\n  ...props\n}: React.ComponentPropsWithRef<'nav'> & {\n  separator?: React.ReactNode\n}) => {\n  return <nav ref={ref} {...props} duck-breadcrumb=\"\" aria-label=\"breadcrumb\" />\n}\n\nconst BreadcrumbList = ({ className, ref, ...props }: React.ComponentPropsWithRef<'ol'>) => (\n  <ol\n    ref={ref}\n    className={cn(\n      'flex flex-wrap items-center gap-1.5 break-words text-muted-foreground text-sm sm:gap-2.5',\n      className,\n    )}\n    {...props}\n    duck-breadcrumb-list=\"\"\n  />\n)\n\nconst BreadcrumbItem = ({ className, ref, ...props }: React.ComponentPropsWithRef<'li'>) => {\n  return (\n    <li ref={ref} className={cn('inline-flex items-center gap-1.5', className)} {...props} duck-breadcrumb-item=\"\" />\n  )\n}\n\nconst BreadcrumbLink = ({\n  asChild,\n  className,\n  ref,\n  ...props\n}: React.ComponentPropsWithRef<'a'> & {\n  asChild?: boolean\n}) => {\n  const Comp = (asChild ? Slot : 'a') as React.ElementType\n  return (\n    <Comp\n      ref={ref}\n      className={cn('transition-colors hover:text-foreground', className)}\n      {...props}\n      duck-breadcrumb-link=\"\"\n    />\n  )\n}\n\nconst BreadcrumbPage = ({ className, ref, ...props }: React.ComponentPropsWithRef<'span'>) => {\n  return (\n    <span\n      ref={ref}\n      className={cn('font-normal text-foreground', className)}\n      {...props}\n      role=\"link\"\n      aria-disabled=\"true\"\n      aria-current=\"page\"\n      duck-breadcrumb-page=\"\"\n    />\n  )\n}\n\nconst BreadcrumbSeparator = ({ children, className, ...props }: React.ComponentProps<'li'>) => (\n  <li\n    className={cn('[&>svg]:size-3.5', className)}\n    {...props}\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    duck-breadcrumb-separator=\"\">\n    {children ?? <ChevronRight />}\n  </li>\n)\n\nconst BreadcrumbEllipsis = ({ className, ...props }: React.ComponentProps<'span'>) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn('flex h-9 w-9 items-center justify-center', className)}\n    {...props}\n    duck-breadcrumb-ellipsis=\"\">\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n",
      "type": "registry:ui",
      "target": "components/ui/breadcrumb.tsx"
    },
    {
      "path": "breadcrumb/index.ts",
      "content": "export * from './breadcrumb'\n",
      "type": "registry:ui",
      "target": "components/ui/index.ts"
    }
  ],
  "source": "/registry-ui-duckui/src/breadcrumb"
}