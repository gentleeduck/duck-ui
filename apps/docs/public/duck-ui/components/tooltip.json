{
  "name": "tooltip",
  "type": "registry:ui",
  "registryDependencies": [],
  "root_folder": "tooltip",
  "files": [
    {
      "path": "tooltip/index.ts",
      "content": "export * from './tooltip'\n",
      "type": "registry:ui",
      "target": "components/ui/index.ts"
    },
    {
      "path": "tooltip/tooltip.tsx",
      "content": "'use client'\n\nimport * as TooltipPrimitive from '@gentleduck/duck-primitives/tooltip'\nimport { cn } from '@gentleduck/libs/cn'\nimport { AnimDialogVariants, AnimVariants } from '@gentleduck/motion/anim'\nimport { VariantProps } from '@gentleduck/variants'\nimport type React from 'react'\nimport { Button } from '../button'\n\nfunction Tooltip({\n  skipDelayDuration,\n  delayDuration,\n  ...props\n}: React.ComponentPropsWithRef<typeof TooltipPrimitive.Root>) {\n  return <TooltipPrimitive.Root skipDelayDuration={skipDelayDuration} delayDuration={delayDuration} {...props} />\n}\n\nfunction TooltipTrigger({\n  children,\n  variant = 'outline',\n  asChild = false,\n  ...props\n}: React.ComponentPropsWithRef<typeof TooltipPrimitive.Trigger> & React.ComponentPropsWithRef<typeof Button>) {\n  return (\n    <TooltipPrimitive.Trigger asChild>\n      <Button {...props} variant={variant} asChild={asChild}>\n        {children}\n      </Button>\n    </TooltipPrimitive.Trigger>\n  )\n}\n\nfunction TooltipContent({\n  className,\n  children,\n  animation = 'default',\n  overlay = 'nothing',\n  ...props\n}: React.ComponentPropsWithRef<typeof TooltipPrimitive.Content> & {\n  animation?: VariantProps<typeof AnimDialogVariants>['animation']\n  overlay?: VariantProps<typeof AnimVariants>['overlay']\n}): React.JSX.Element {\n  return (\n    <TooltipPrimitive.Content\n      role=\"tooltip\"\n      className={cn(\n        AnimVariants({ overlay }),\n        AnimDialogVariants({ animation }),\n        'absolute z-50 max-h-fit w-fit max-w-[300px] text-balance border border-border bg-popover p-4 text-popover-foreground',\n        'select-none px-3 py-1.5',\n        className,\n      )}\n      {...props}>\n      {children}\n    </TooltipPrimitive.Content>\n  )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent }\n",
      "type": "registry:ui",
      "target": "components/ui/tooltip.tsx"
    }
  ],
  "source": "/registry-ui-duckui/src/tooltip"
}